pipeline {
    agent any
	
	tools {
        nodejs 'nodejs'
    }

    stages {
        stage('Install Dependencies') {
            steps {
                echo 'Installing dependencies for development...'
                sh 'npm install'
            }
        }

        stage('Build') {
            steps {
                echo 'Building project...'
                sh 'npm run build:stage'
            }
        }

        stage('Deploy to server') {
            steps {
                sshagent (credentials: ['deploy-ssh-key']) {
                    script {
                        echo 'Deploying to development server...'
                        sh 'ssh -p ${STAGE_SSH_PORT} -o StrictHostKeyChecking=no ${STAGE_SSH_F_USER}@${STAGE_SSH_HOST} rm -rf /home/${STAGE_SSH_F_USER}/www-tmp'
                        sh 'ssh -p ${STAGE_SSH_PORT} -o StrictHostKeyChecking=no ${STAGE_SSH_F_USER}@${STAGE_SSH_HOST} mkdir /home/${STAGE_SSH_F_USER}/www-tmp'
                        sh 'scp -P${STAGE_SSH_PORT} -o StrictHostKeyChecking=no -r ./dist/carrierassist-fe/* ${STAGE_SSH_F_USER}@${STAGE_SSH_HOST}:/home/${STAGE_SSH_F_USER}/www-tmp'
                        sh 'ssh -p ${STAGE_SSH_PORT} -o StrictHostKeyChecking=no ${STAGE_SSH_F_USER}@${STAGE_SSH_HOST} rm -rf /home/${STAGE_SSH_F_USER}/www-old'
                        sh 'ssh -p ${STAGE_SSH_PORT} -o StrictHostKeyChecking=no ${STAGE_SSH_F_USER}@${STAGE_SSH_HOST} mv /home/${STAGE_SSH_F_USER}/www /home/${STAGE_SSH_F_USER}/www-old'
                        sh 'ssh -p ${STAGE_SSH_PORT} -o StrictHostKeyChecking=no ${STAGE_SSH_F_USER}@${STAGE_SSH_HOST} mv /home/${STAGE_SSH_F_USER}/www-tmp /home/${STAGE_SSH_F_USER}/www'
                        sh 'ssh -p ${STAGE_SSH_PORT} -o StrictHostKeyChecking=no ${STAGE_SSH_F_USER}@${STAGE_SSH_HOST} chown ${STAGE_SSH_F_USER}:${STAGE_SSH_F_USER} /home/${STAGE_SSH_F_USER}/www -R'
                    }
                }
            }
        }
    }
}