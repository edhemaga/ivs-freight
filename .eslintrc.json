{
    "root": true,
    "ignorePatterns": ["projects/**/*"],
    "plugins": ["@typescript-eslint", "import", "perfectionist"],
    "overrides": [
        {
            "files": ["*.ts"],
            "parser": "@typescript-eslint/parser",
            "extends": [
                "eslint:recommended",
                "plugin:@typescript-eslint/recommended",
                "plugin:@angular-eslint/recommended",
                "plugin:@angular-eslint/template/process-inline-templates",
                "plugin:import/recommended",
                "plugin:import/typescript",
                "plugin:prettier/recommended"
            ],
            "rules": {
                "perfectionist/sort-classes": [
                    "error",
                    {
                        "type": "alphabetical",
                        "order": "asc",
                        "newlinesBetween": "always",
                        "groups": [
                            "view-child-properties",
                            "output-properties",
                            "input-properties",
                            "protected-property",
                            "private-property",
                            "public-property",
                            "constructor-custom-group",
                            "angular-lifecycles",
                            "protected-methods-spaced",
                            "private-methods-spaced",
                            "public-methods-spaced",
                            "angular-lifecycle-ngOnDestroy"
                        ],
                        "customGroups": [
                            {
                                "groupName": "view-child-properties",
                                "selector": "property",
                                "modifiers": ["decorated"],
                                "decoratorNamePattern": "ViewChild"
                            },
                            {
                                "groupName": "input-properties",
                                "selector": "property",
                                "modifiers": ["decorated"],
                                "decoratorNamePattern": "Input"
                            },
                            {
                                "groupName": "output-properties",
                                "selector": "property",
                                "modifiers": ["decorated"],
                                "decoratorNamePattern": "Output"
                            },
                            {
                                "groupName": "angular-lifecycles",
                                "type": "unsorted",
                                "newlinesInside": "always",
                                "anyOf": [
                                    {
                                        "selector": "method",
                                        "elementNamePattern": "^(ngOnChanges|ngOnInit|ngDoCheck|ngAfterContentInit|ngAfterContentChecked|ngAfterViewInit|ngAfterViewChecked)$"
                                    }
                                ]
                            },
                            {
                                "groupName": "angular-lifecycle-ngOnDestroy",
                                "newlinesInside": "always",
                                "anyOf": [
                                    {
                                        "selector": "method",
                                        "elementNamePattern": "^(ngOnDestroy)$"
                                    }
                                ]
                            },
                            {
                                // we cannot use reserved "constructor" name in "groups": [] from perfectionist because "constructor" belongs to a method selector
                                // and when I write the custom group with method selector, like I did for protected-methods-spaced etc. "constructor" isn't on the right place
                                // so I need to write constructor custom group and place it inside "customGroups": [] above method selectors protected-methods-spaced etc.
                                "groupName": "constructor-custom-group",
                                "selector": "constructor",
                                "newlinesInside": "always"
                            },
                            {
                                "groupName": "protected-methods-spaced",
                                "selector": "method",
                                "modifiers": ["protected"],
                                "newlinesInside": "always"
                            },
                            {
                                "groupName": "private-methods-spaced",
                                "selector": "method",
                                "modifiers": ["private"],
                                "newlinesInside": "always"
                            },
                            {
                                "groupName": "public-methods-spaced",
                                "selector": "method",
                                "modifiers": ["public"],
                                "newlinesInside": "always"
                            }
                        ]
                    }
                ],
                "@typescript-eslint/no-explicit-any": "error",
                "@typescript-eslint/no-shadow": "error",
                "@typescript-eslint/no-var-requires": "off",
                "@typescript-eslint/no-unused-vars": [
                    "error",
                    {
                        "argsIgnorePattern": "^_",
                        "varsIgnorePattern": "^_"
                    }
                ],
                "@angular-eslint/directive-selector": [
                    "error",
                    {
                        "type": "attribute",
                        "prefix": "app",
                        "style": "camelCase"
                    }
                ],
                "@angular-eslint/component-selector": [
                    "error",
                    {
                        "type": "element",
                        "prefix": "app",
                        "style": "kebab-case"
                    }
                ],
                // maybe to use also perfectionist here TODO: check documentation https://perfectionist.dev/rules/sort-imports
                "import/order": [
                    "error",
                    {
                        "alphabetize": {
                            "order": "asc",
                            "caseInsensitive": true
                        },
                        "newlines-between": "always",
                        "groups": [
                            "builtin",
                            "external",
                            "internal",
                            "parent",
                            "sibling",
                            "index"
                        ],
                        "pathGroups": [
                            {
                                "pattern": "@angular/**",
                                "group": "builtin",
                                "position": "after"
                            },
                            {
                                "pattern": "rxjs",
                                "group": "external",
                                "position": "after"
                            },
                            {
                                "pattern": "**/enums/**",
                                "group": "internal",
                                "position": "after"
                            },
                            {
                                "pattern": "**/models**",
                                "group": "internal",
                                "position": "after"
                            },
                            {
                                "pattern": "appcoretruckassist",
                                "group": "internal",
                                "position": "after"
                            },
                            {
                                "pattern": "**/services/**",
                                "group": "internal",
                                "position": "after"
                            },
                            {
                                "pattern": "angular-svg-icon",
                                "group": "external",
                                "position": "after"
                            },
                            {
                                "pattern": "**/components/**",
                                "group": "internal",
                                "position": "after"
                            },
                            {
                                "pattern": "**/pipes/**",
                                "group": "internal",
                                "position": "after"
                            }
                        ],
                        "pathGroupsExcludedImportTypes": ["builtin"]
                    }
                ]
            }
        },
        {
            "files": ["*.html"],
            "extends": [
                "plugin:@angular-eslint/template/recommended",
                "plugin:@angular-eslint/template/accessibility"
            ],
            "rules": {}
        }
    ],
    "settings": {
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true,
                "project": "./tsconfig.json"
            }
        }
    }
}
