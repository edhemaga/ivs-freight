import { DriverCdl } from './driver-cdl.model';
import { DriverMedical } from './driver-medical.model';
import { DriverMvr } from './driver-mvr.model';
import { DriverEndorsement } from './driver-endorsement.model';
import { Work } from '@shared/models/work.model';
import { DriverLicense } from './driver-license.model';
import { DriverAdditional } from './driver-additional.model';

export interface Driver {
    id: number;
    companyId: number;
    fullName: string;
    driverUserId: number;
    dob: string;
    ownerId?: any;
    app: number;
    mvr: number;
    psp: number;
    ssnApplicant: number;
    rev: boolean;
    sph: number;
    medical: DriverMedical;
    cdl: DriverCdl;
    email: string;
    ssn: string;
    dateOdobfBirth?: any;
    password?: any;
    avatar: string;
    firstName: string;
    lastName: string;
    phone: string;
    additionalData: DriverAdditional;
    workData: Work;
    licenseData: DriverLicense[];
    medicalData: DriverMedical[];
    mvrData: DriverMvr[];
    bankId?: any;
    accountNumber?: any;
    routingNumber?: any;
    deviceId?: any;
    uniqueId?: any;
    paymentTypeId?: any;
    paymentType?: any;
    commission: number;
    emptyMiles?: any;
    loadedMiles?: any;
    isOwner: number;
    isOwnerAsCompany: number;
    commissionOwner?: any;
    twic: number;
    expirationDate?: any;
    cardNumber?: any;
    cardId?: any;
    status: number;
    used: number;
    doc: any;
    protected: number;
    createdAt: string;
    updatedAt: string;
    gpsFlag: any;
    truckload: any;
    owner: any;
    driverUser: any;
    guid: string;
    textPhone: string;
    textEmail: string;
    textAddress: string;
    textDOB: string;
    textHired: string;
    textState: string;
    textCDL: string;
    textBank: any;
    textAccount: any;
    textRouting: any;
    bankImage: any;
    restrictions?: any;
    endorsements: DriverEndorsement[];
    tableCDLData: DriverCdl;
    tableMedicalData: DriverMedical;
    tableMvrData: DriverMvr;
    isSelected: boolean;
}
