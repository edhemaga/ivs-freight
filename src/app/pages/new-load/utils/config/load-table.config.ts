// enums
import { LoadSortBy, MilesStopSortBy } from 'appcoretruckassist';
import { eLoadStatusStringType } from '@pages/new-load/enums';

// interfaces
import { ITableColumn } from '@shared/components/new-table/interfaces';

export class LoadTableColumnsConfig {
    /* 
    
        if new column needs to be added, make sure that every ID is unique

    */
    static getLoadTableColumns(
        selectedTab: eLoadStatusStringType
    ): ITableColumn[] {
        if (selectedTab === eLoadStatusStringType.TEMPLATE) {
            return [
                LoadTableColumnsConfig.selectColumn,
                LoadTableColumnsConfig.templateNameColumn,
                LoadTableColumnsConfig.loadTypeColumn,
                LoadTableColumnsConfig.loadDispatcherColumn,
                LoadTableColumnsConfig.companyNameColumn,
                LoadTableColumnsConfig.brokerGroupColumn,
                LoadTableColumnsConfig.loadDetailsGroupColumn,
                LoadTableColumnsConfig.assignedGroupColumn,
                LoadTableColumnsConfig.generateStatusGroupColumn(true),
                LoadTableColumnsConfig.requirementGroupColumn,
                LoadTableColumnsConfig.driverMessageGroupColumn,
                LoadTableColumnsConfig.milesGroupColumn,
                LoadTableColumnsConfig.generateBillingGroupColumn(false),
                LoadTableColumnsConfig.dateCreatedColumn,
                LoadTableColumnsConfig.dateEditedColumn,
                LoadTableColumnsConfig.noteColumn,
                LoadTableColumnsConfig.actionColumn,
            ];
        } else if (selectedTab === eLoadStatusStringType.CLOSED) {
            return [
                LoadTableColumnsConfig.selectColumn,
                LoadTableColumnsConfig.loadNumberColumn,
                LoadTableColumnsConfig.loadTypeColumn,
                LoadTableColumnsConfig.loadDispatcherColumn,
                LoadTableColumnsConfig.companyNameColumn,
                LoadTableColumnsConfig.brokerGroupColumn,
                LoadTableColumnsConfig.loadDetailsGroupColumn,
                LoadTableColumnsConfig.assignedGroupColumn,
                LoadTableColumnsConfig.generateStatusGroupColumn(false),
                LoadTableColumnsConfig.requirementGroupColumn,
                LoadTableColumnsConfig.driverMessageGroupColumn,
                LoadTableColumnsConfig.milesGroupColumn,
                LoadTableColumnsConfig.generateBillingGroupColumn(true),
                LoadTableColumnsConfig.dateInvoicedColumn,
                LoadTableColumnsConfig.datePaidColumn,
                LoadTableColumnsConfig.dateCreatedColumn,
                LoadTableColumnsConfig.dateEditedColumn,
                LoadTableColumnsConfig.filesColumn,
                LoadTableColumnsConfig.commentsColumn,
                LoadTableColumnsConfig.noteColumn,
                LoadTableColumnsConfig.actionColumn,
                LoadTableColumnsConfig.documentsDrawerDownloadAllColumn,
                LoadTableColumnsConfig.closeDocumentsDrawerColumn,
                LoadTableColumnsConfig.documentsDrawerActionColumn,
            ];
        } else {
            return [
                LoadTableColumnsConfig.selectColumn,
                LoadTableColumnsConfig.loadNumberColumn,
                LoadTableColumnsConfig.loadTypeColumn,
                LoadTableColumnsConfig.loadDispatcherColumn,
                LoadTableColumnsConfig.companyNameColumn,
                LoadTableColumnsConfig.brokerGroupColumn,
                LoadTableColumnsConfig.loadDetailsGroupColumn,
                LoadTableColumnsConfig.assignedGroupColumn,
                LoadTableColumnsConfig.generateStatusGroupColumn(false),
                LoadTableColumnsConfig.requirementGroupColumn,
                LoadTableColumnsConfig.driverMessageGroupColumn,
                LoadTableColumnsConfig.milesGroupColumn,
                LoadTableColumnsConfig.generateBillingGroupColumn(false),
                LoadTableColumnsConfig.dateCreatedColumn,
                LoadTableColumnsConfig.dateEditedColumn,
                LoadTableColumnsConfig.filesColumn,
                LoadTableColumnsConfig.commentsColumn,
                LoadTableColumnsConfig.noteColumn,
                LoadTableColumnsConfig.actionColumn,
                LoadTableColumnsConfig.documentsDrawerDownloadAllColumn,
                LoadTableColumnsConfig.closeDocumentsDrawerColumn,
                LoadTableColumnsConfig.documentsDrawerActionColumn,
            ];
        }
    }

    static generateStatusGroupColumn(isTemplateTable: boolean): ITableColumn {
        const loadStatusColumn = {
            id: 16,
            key: 'loadStatus',
            label: 'Status',
            labelToolbar: 'Status',
            width: 138,
            minWidth: 90,
            maxWidth: 150,
            isResizable: true,
            isChecked: true,
            isUniqueColumn: true,
            hasSort: true,
            sortName: LoadSortBy.Status,
        };

        return {
            key: 'statusGroup',
            label: '',
            labelToolbar: '',
            pinned: null,
            isChecked: true,
            columns: [
                ...(isTemplateTable ? [] : [loadStatusColumn]),
                {
                    id: 17,
                    key: 'loadPickupDelivery',
                    label: 'Pickup & Delivery',
                    labelToolbar: 'Pickup & Delivery',
                    width: 306,
                    minWidth: 180,
                    maxWidth: 400,
                    isResizable: true,
                    isChecked: true,
                    hasSort: false,
                },
            ],
        };
    }

    static generateBillingGroupColumn(isClosedTable: boolean): ITableColumn {
        const billingPayTermColumn = {
            id: 29,
            key: 'billingPayTerm',
            label: 'Term',
            additionalLabel: 'd.',
            labelToolbar: 'Pay Term',
            width: 68,
            minWidth: 30,
            maxWidth: 68,
            isResizable: true,
            isChecked: false,
            hasSort: true,
        };

        const billingAgeUnpaidColumn = {
            id: 30,
            key: 'billingAgeUnpaid',
            label: 'Age',
            additionalLabel: 'unp.',
            labelToolbar: 'Age - Unpaid',
            width: 76,
            minWidth: 45,
            maxWidth: 83,
            isResizable: true,
            isChecked: true,
            hasSort: true,
        };

        const billingAgePaidColumn = {
            id: 31,
            key: 'billingAgePaid',
            label: 'Age',
            additionalLabel: 'paid',
            labelToolbar: 'Age - Paid',
            width: 76,
            minWidth: 45,
            maxWidth: 83,
            isResizable: true,
            isChecked: false,
            hasSort: true,
        };

        const billingDueColumn = {
            id: 32,
            key: 'billingDue',
            label: 'Due',
            labelToolbar: 'Due',
            width: 101,
            minWidth: 60,
            maxWidth: 140,
            isResizable: true,
            isChecked: true,
            hasSort: true,
        };

        return {
            key: 'billingGroup',
            label: 'Billing',
            labelToolbar: 'Billing',
            pinned: null,
            isChecked: true,
            columns: [
                ...(isClosedTable
                    ? [
                          billingPayTermColumn,
                          billingAgeUnpaidColumn,
                          billingAgePaidColumn,
                      ]
                    : []),
                {
                    id: 33,
                    key: 'billingRatePerMile',
                    label: 'RPM',
                    labelToolbar: 'Rate Per Mile',
                    width: 80,
                    minWidth: 50,
                    maxWidth: 80,
                    isResizable: true,
                    isChecked: false,
                    hasSort: true,
                },
                {
                    id: 34,
                    key: 'billingLayover',
                    label: 'Layover',
                    labelToolbar: 'Layover',
                    width: 101,
                    minWidth: 60,
                    maxWidth: 140,
                    isResizable: true,
                    isChecked: false,
                    hasSort: true,
                },
                {
                    id: 35,
                    key: 'billinglumper',
                    label: 'Lumper',
                    labelToolbar: 'Lumper',
                    width: 101,
                    minWidth: 60,
                    maxWidth: 140,
                    isResizable: true,
                    isChecked: false,
                    hasSort: true,
                },
                {
                    id: 36,
                    key: 'billingFuelSurcharge',
                    label: 'Fuel Surch',
                    labelToolbar: 'Fuel Surcharge',
                    width: 101,
                    minWidth: 60,
                    maxWidth: 140,
                    isResizable: true,
                    isChecked: false,
                    hasSort: true,
                },
                {
                    id: 37,
                    key: 'billingEscort',
                    label: 'Escort',
                    labelToolbar: 'Escort',
                    width: 101,
                    minWidth: 60,
                    maxWidth: 140,
                    isResizable: true,
                    isChecked: false,
                    hasSort: true,
                },
                {
                    id: 38,
                    key: 'billingDetention',
                    label: 'Detention',
                    labelToolbar: 'Detention',
                    width: 101,
                    minWidth: 60,
                    maxWidth: 140,
                    isResizable: true,
                    isChecked: false,
                    hasSort: true,
                },
                {
                    id: 39,
                    key: 'billingRate',
                    label: 'Rate',
                    labelToolbar: 'Rate',
                    width: 101,
                    minWidth: 60,
                    maxWidth: 140,
                    isResizable: true,
                    isChecked: true,
                    hasSort: true,
                },
                {
                    id: 40,
                    key: 'billingPaid',
                    label: 'Paid',
                    labelToolbar: 'Paid',
                    width: 101,
                    minWidth: 60,
                    maxWidth: 140,
                    isResizable: true,
                    isChecked: true,
                    hasSort: true,
                },
                ...(isClosedTable ? [billingDueColumn] : []),
            ],
        };
    }

    /* Columns */

    static selectColumn: ITableColumn = {
        id: 1,
        key: 'select',
        label: '',
        pinned: 'left',
        width: 26,
        minWidth: 26,
        maxWidth: 26,
        isResizable: false,
        isDisabled: true,
        isChecked: true,
        hasSort: false,
    };

    static templateNameColumn: ITableColumn = {
        id: 2,
        key: 'templateName',
        label: 'Name',
        labelToolbar: 'Template name',
        pinned: 'left',
        width: 154,
        minWidth: 60,
        maxWidth: 250,
        isResizable: true,
        isDisabled: true,
        isChecked: true,
        hasSort: true,
    };

    static loadNumberColumn: ITableColumn = {
        id: 3,
        key: 'loadNumber',
        label: 'Load No',
        labelToolbar: 'Load No.',
        pinned: 'left',
        width: 154,
        minWidth: 60,
        maxWidth: 250,
        isResizable: true,
        isDisabled: true,
        isChecked: true,
        hasSort: true,
        sortName: LoadSortBy.LoadNumber,
    };

    static loadTypeColumn: ITableColumn = {
        id: 4,
        key: 'loadType',
        label: 'Type',
        labelToolbar: 'Type',
        pinned: null,
        width: 82,
        minWidth: 82,
        maxWidth: 82,
        isResizable: true,
        isChecked: false,
        hasSort: true,
    };

    static loadDispatcherColumn: ITableColumn = {
        id: 5,
        key: 'loadDispatcher',
        label: 'Dispatcher',
        labelToolbar: 'Dispatcher',
        pinned: null,
        width: 208,
        minWidth: 50,
        maxWidth: 1020,
        isResizable: true,
        isChecked: false,
        hasSort: true,
        sortName: LoadSortBy.Dispatcher,
    };

    static companyNameColumn: ITableColumn = {
        id: 6,
        key: 'companyName',
        label: 'Company',
        labelToolbar: 'Company',
        pinned: null,
        width: 238,
        minWidth: 50,
        maxWidth: 1020,
        isResizable: true,
        isChecked: false,
        hasSort: true,
    };

    static brokerGroupColumn: ITableColumn = {
        key: 'brokerGroup',
        label: 'Broker',
        labelToolbar: 'Broker Detail',
        pinned: null,
        isChecked: true,
        columns: [
            {
                id: 7,
                key: 'brokerBusinessName',
                label: 'Business Name',
                labelToolbar: 'Business name',
                width: 238,
                minWidth: 50,
                maxWidth: 1020,
                isResizable: true,
                isChecked: false,
                hasSort: true,
                sortName: LoadSortBy.BrokerBusinessName,
            },
            {
                id: 8,
                key: 'brokerContact',
                label: 'Contact',
                labelToolbar: 'Contact',
                width: 186,
                minWidth: 50,
                maxWidth: 550,
                isResizable: true,
                isChecked: false,
                hasSort: true,
                sortName: LoadSortBy.BrokerContactName,
            },
            {
                id: 9,
                key: 'brokerPhone',
                label: 'Phone',
                labelToolbar: 'Phone',
                width: 192,
                minWidth: 154,
                maxWidth: 224,
                isResizable: true,
                isChecked: false,
                hasSort: true,
                sortName: LoadSortBy.BrokerContactPhone,
            },
        ],
    };

    static loadDetailsGroupColumn: ITableColumn = {
        key: 'loadDetailsGroup',
        label: '',
        labelToolbar: '',
        pinned: null,
        isChecked: true,
        columns: [
            {
                id: 10,
                key: 'referenceNumber',
                label: 'REF NO',
                labelToolbar: 'Ref Number',
                width: 108,
                minWidth: 64,
                maxWidth: 160,
                isResizable: true,
                isChecked: false,
                hasSort: true,
            },
            {
                id: 11,
                key: 'commodity',
                label: 'Commodity',
                labelToolbar: 'Commodity',
                width: 138,
                minWidth: 100,
                maxWidth: 140,
                isResizable: true,
                isChecked: true,
                hasSort: true,
            },
            {
                id: 12,
                key: 'weight',
                label: 'Weight',
                additionalLabel: 'lbs.',
                labelToolbar: 'Weight',
                width: 98,
                minWidth: 64,
                maxWidth: 120,
                isResizable: true,
                isChecked: false,
                hasSort: true,
                sortName: LoadSortBy.Weight,
            },
        ],
    };

    static assignedGroupColumn: ITableColumn = {
        key: 'assignedGroup',
        label: 'Assigned',
        labelToolbar: 'Assigned',
        pinned: null,
        isChecked: false,
        columns: [
            {
                id: 13,
                key: 'assignedDriver',
                label: 'Driver',
                labelToolbar: 'Driver',
                width: 208,
                minWidth: 50,
                maxWidth: 1020,
                isResizable: true,
                isChecked: false,
                hasSort: true,
            },
            {
                id: 14,
                key: 'assignedDriverTruckNumber',
                label: 'Truck',
                labelToolbar: 'Truck',
                width: 78,
                minWidth: 30,
                maxWidth: 140,
                isResizable: true,
                isChecked: false,
                hasSort: true,
            },
            {
                id: 15,
                key: 'assignedDriverTrailerNumber',
                label: 'Trailer',
                labelToolbar: 'Trailer',
                width: 88,
                minWidth: 30,
                maxWidth: 140,
                isResizable: true,
                isChecked: false,
                hasSort: true,
            },
        ],
    };

    static requirementGroupColumn: ITableColumn = {
        key: 'requirementGroup',
        label: 'Req',
        labelToolbar: 'Requirement',
        pinned: null,
        isChecked: false,
        columns: [
            {
                id: 18,
                key: 'requirementTruck',
                label: 'Truck',
                labelToolbar: 'Truck Type',
                width: 74,
                minWidth: 60,
                maxWidth: 230,
                isResizable: true,
                isChecked: false,
                hasSort: true,
                sortName: LoadSortBy.TruckType,
            },
            {
                id: 19,
                key: 'requirementTrailer',
                label: 'Trailer',
                labelToolbar: 'Trailer Type',
                width: 74,
                minWidth: 60,
                maxWidth: 230,
                isResizable: true,
                isChecked: false,
                hasSort: true,
                sortName: LoadSortBy.TrailerType,
            },
            {
                id: 20,
                key: 'requirementLength',
                label: '',
                additionalLabel: 'ft',
                labelToolbar: 'Length',
                width: 52,
                minWidth: 32,
                maxWidth: 70,
                isResizable: true,
                isChecked: false,
                hasSort: true,
                sortName: LoadSortBy.TrailerLength,
            },
            {
                id: 21,
                key: 'requirementDoor',
                label: 'Door',
                labelToolbar: 'Door Type',
                width: 90,
                minWidth: 52,
                maxWidth: 110,
                isResizable: true,
                isChecked: false,
                hasSort: true,
            },
            {
                id: 22,
                key: 'requirementSuspension',
                label: 'Suspension',
                labelToolbar: 'Suspension',
                width: 100,
                minWidth: 55,
                maxWidth: 120,
                isResizable: true,
                isChecked: false,
                hasSort: true,
                sortName: LoadSortBy.Suspension,
            },
            {
                id: 23,
                key: 'requirementYear',
                label: 'Year',
                labelToolbar: 'Year',
                width: 58,
                minWidth: 50,
                maxWidth: 64,
                isResizable: true,
                isChecked: false,
                hasSort: true,
                sortName: LoadSortBy.Year,
            },
            {
                id: 24,
                key: 'requirementLiftgate',
                label: 'Liftgate',
                labelToolbar: 'Liftgate',
                width: 72,
                minWidth: 50,
                maxWidth: 78,
                isResizable: true,
                isChecked: false,
                hasSort: true,
            },
        ],
    };

    static driverMessageGroupColumn: ITableColumn = {
        key: 'driverMessageGroup',
        label: '',
        labelToolbar: '',
        pinned: null,
        isChecked: false,
        columns: [
            {
                id: 25,
                key: 'driverMessage',
                label: 'Driver Message',
                labelToolbar: 'Driver Message',
                width: 234,
                minWidth: 100,
                maxWidth: 310,
                isResizable: true,
                isChecked: false,
                hasSort: true,
                sortName: LoadSortBy.DriverMessage,
            },
        ],
    };

    static milesGroupColumn: ITableColumn = {
        key: 'milesGroup',
        label: 'Miles',
        labelToolbar: 'Miles',
        pinned: null,
        isChecked: true,
        columns: [
            {
                id: 26,
                key: 'milesLoaded',
                label: 'Loaded',
                labelToolbar: 'Loaded',
                width: 78,
                minWidth: 30,
                maxWidth: 88,
                isResizable: true,
                isChecked: false,
                hasSort: true,
                sortName: MilesStopSortBy.LoadedMiles,
            },
            {
                id: 27,
                key: 'milesEmpty',
                label: 'Empty',
                labelToolbar: 'Empty',
                width: 78,
                minWidth: 30,
                maxWidth: 88,
                isResizable: true,
                isChecked: false,
                hasSort: true,
                sortName: MilesStopSortBy.EmptyMiles,
            },
            {
                id: 28,
                key: 'milesTotal',
                label: 'Total',
                labelToolbar: 'Total',
                width: 78,
                minWidth: 30,
                maxWidth: 88,
                isResizable: true,
                isChecked: true,
                hasSort: true,
                sortName: MilesStopSortBy.TotalMiles,
            },
        ],
    };

    static dateInvoicedColumn: ITableColumn = {
        id: 41,
        key: 'dateInvoiced',
        label: 'Invoiced',
        labelToolbar: 'Invoiced Date',
        pinned: null,
        width: 88,
        minWidth: 72,
        maxWidth: 88,
        isResizable: true,
        isChecked: false,
        hasSort: true,
        sortName: LoadSortBy.InvoicedDate,
    };

    static datePaidColumn: ITableColumn = {
        id: 42,
        key: 'datePaid',
        label: 'Date Paid',
        labelToolbar: 'Paid Date',
        pinned: null,
        width: 88,
        minWidth: 72,
        maxWidth: 88,
        isResizable: true,
        isChecked: false,
        hasSort: true,
        sortName: LoadSortBy.PaidDate,
    };

    static dateCreatedColumn: ITableColumn = {
        id: 43,
        key: 'dateCreated',
        label: 'Created',
        labelToolbar: 'Date Created',
        pinned: null,
        width: 88,
        minWidth: 72,
        maxWidth: 88,
        isResizable: true,
        isChecked: true,
        hasSort: true,
        sortName: LoadSortBy.AddedDate,
    };

    static dateEditedColumn: ITableColumn = {
        id: 44,
        key: 'dateEdited',
        label: 'Edited',
        labelToolbar: 'Date Edited',
        pinned: null,
        width: 88,
        minWidth: 72,
        maxWidth: 88,
        isResizable: true,
        isChecked: true,
        hasSort: true,
        sortName: LoadSortBy.EditedDate,
    };

    static filesColumn: ITableColumn = {
        id: 45,
        key: 'files',
        label: '',
        labelToolbar: '',
        pinned: 'right',
        width: 46,
        minWidth: 46,
        isResizable: false,
        isDisabled: true,
        isChecked: true,
        hasSort: false,
    };

    static commentsColumn: ITableColumn = {
        id: 46,
        key: 'comments',
        label: '',
        labelToolbar: '',
        pinned: 'right',
        width: 26,
        minWidth: 26,
        isResizable: false,
        isDisabled: true,
        isChecked: true,
        hasSort: false,
    };

    static noteColumn: ITableColumn = {
        id: 47,
        key: 'note',
        label: '',
        labelToolbar: '',
        pinned: 'right',
        width: 26,
        minWidth: 26,
        isResizable: false,
        isDisabled: true,
        isChecked: true,
        hasSort: false,
    };

    static actionColumn: ITableColumn = {
        id: 48,
        key: 'action',
        label: '',
        labelToolbar: '',
        pinned: 'right',
        width: 26,
        minWidth: 26,
        isResizable: false,
        isChecked: true,
        isDisabled: true,
        hasSort: false,
    };

    /* Documents Drawer Columns */
    static documentsDrawerDownloadAllColumn: ITableColumn = {
        id: 49,
        key: 'documentsDrawerDownloadAll',
        label: '',
        labelToolbar: '',
        pinned: 'right',
        width: 26,
        minWidth: 26,
        isResizable: false,
        isChecked: true,
        isDisabled: true,
        isDocumentsDrawerColumn: true,
        hasSort: false,
    };

    static closeDocumentsDrawerColumn: ITableColumn = {
        id: 50,
        key: 'closeDocumentsDrawer',
        label: '',
        labelToolbar: '',
        pinned: 'right',
        width: 26,
        minWidth: 26,
        isResizable: false,
        isChecked: true,
        isDisabled: true,
        isDocumentsDrawerColumn: true,
        hasSort: false,
    };

    static documentsDrawerActionColumn: ITableColumn = {
        id: 51,
        key: 'documentsDrawerAction',
        label: '',
        labelToolbar: '',
        pinned: 'right',
        width: 26,
        minWidth: 26,
        isResizable: false,
        isChecked: true,
        isDisabled: true,
        isDocumentsDrawerColumn: true,
        hasSort: false,
    };
}
